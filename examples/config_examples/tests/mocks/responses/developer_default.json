{
  "initialize": {
    "version": "1.0.0",
    "name": "mock-developer-server"
  },
  "list_tools": {
    "tools": [
      {
        "name": "get_package_version",
        "description": "Get the latest version of a package",
        "arguments": [
          {
            "name": "package",
            "description": "Package name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registry",
            "description": "Package registry",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["npm", "pypi", "maven", "docker"],
              "default": "npm"
            }
          }
        ]
      },
      {
        "name": "analyze_dockerfile",
        "description": "Analyze a Dockerfile for best practices",
        "arguments": [
          {
            "name": "content",
            "description": "Dockerfile content",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "parse_openapi",
        "description": "Parse an OpenAPI specification",
        "arguments": [
          {
            "name": "spec",
            "description": "OpenAPI specification (JSON or YAML)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "edit_text",
        "description": "Edit text content",
        "arguments": [
          {
            "name": "content",
            "description": "Original content",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operations",
            "description": "Edit operations",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["insert", "delete", "replace"]
                  },
                  "position": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "text": {
                    "type": "string"
                  }
                },
                "required": ["type", "position"]
              }
            }
          }
        ]
      }
    ]
  },
  "call_tool": {
    "get_package_version": {
      "content": [
        {
          "type": "text",
          "text": "{\n  \"package\": \"react\",\n  \"registry\": \"npm\",\n  \"latest\": \"18.2.0\",\n  \"stable\": \"18.2.0\",\n  \"next\": \"19.0.0-alpha.3\",\n  \"all_versions\": [\n    \"19.0.0-alpha.3\",\n    \"19.0.0-alpha.2\",\n    \"19.0.0-alpha.1\",\n    \"18.2.0\",\n    \"18.1.0\",\n    \"18.0.0\",\n    \"17.0.2\",\n    \"17.0.1\",\n    \"17.0.0\"\n  ],\n  \"dependencies\": {\n    \"loose-envify\": \"^1.1.0\"\n  },\n  \"last_updated\": \"2025-02-15T12:30:45Z\"\n}"
        }
      ]
    },
    "analyze_dockerfile": {
      "content": [
        {
          "type": "text",
          "text": "{\n  \"issues\": [\n    {\n      \"line\": 5,\n      \"severity\": \"high\",\n      \"message\": \"Using 'latest' tag for base image is not recommended\",\n      \"recommendation\": \"Use a specific version tag for the base image\"\n    },\n    {\n      \"line\": 12,\n      \"severity\": \"medium\",\n      \"message\": \"Multiple RUN instructions can be combined to reduce layers\",\n      \"recommendation\": \"Combine RUN instructions using && to reduce the number of layers\"\n    },\n    {\n      \"line\": 18,\n      \"severity\": \"low\",\n      \"message\": \"Consider using a non-root user for security\",\n      \"recommendation\": \"Add a USER instruction to run as a non-root user\"\n    }\n  ],\n  \"optimizations\": [\n    {\n      \"type\": \"multi-stage\",\n      \"description\": \"Use multi-stage builds to reduce image size\",\n      \"example\": \"FROM node:16 AS builder\\nWORKDIR /app\\nCOPY package*.json ./\\nRUN npm ci\\nCOPY . .\\nRUN npm run build\\n\\nFROM node:16-alpine\\nWORKDIR /app\\nCOPY --from=builder /app/dist ./dist\\nCOPY --from=builder /app/package*.json ./\\nRUN npm ci --only=production\\nCMD [\\\"node\\\", \\\"dist/index.js\\\"]\"\n    },\n    {\n      \"type\": \"caching\",\n      \"description\": \"Improve caching by copying package.json first\",\n      \"example\": \"COPY package*.json ./\\nRUN npm install\\nCOPY . .\"\n    }\n  ],\n  \"summary\": {\n    \"total_issues\": 3,\n    \"high\": 1,\n    \"medium\": 1,\n    \"low\": 1,\n    \"estimated_size_reduction\": \"60%\"\n  }\n}"
        }
      ]
    },
    "parse_openapi": {
      "content": [
        {
          "type": "text",
          "text": "{\n  \"info\": {\n    \"title\": \"Sample API\",\n    \"version\": \"1.0.0\",\n    \"description\": \"A sample API for demonstration purposes\"\n  },\n  \"paths\": [\n    {\n      \"path\": \"/users\",\n      \"methods\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"List all users\",\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"in\": \"query\",\n              \"description\": \"Maximum number of users to return\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 10\n              }\n            },\n            {\n              \"name\": \"offset\",\n              \"in\": \"query\",\n              \"description\": \"Number of users to skip\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"default\": 0\n              }\n            }\n          ],\n          \"responses\": [\n            {\n              \"code\": \"200\",\n              \"description\": \"A list of users\",\n              \"content\": \"application/json\"\n            },\n            {\n              \"code\": \"400\",\n              \"description\": \"Bad request\",\n              \"content\": \"application/json\"\n            }\n          ]\n        },\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Create a new user\",\n          \"requestBody\": {\n            \"description\": \"User object to be created\",\n            \"required\": true,\n            \"content\": \"application/json\"\n          },\n          \"responses\": [\n            {\n              \"code\": \"201\",\n              \"description\": \"User created successfully\",\n              \"content\": \"application/json\"\n            },\n            {\n              \"code\": \"400\",\n              \"description\": \"Bad request\",\n              \"content\": \"application/json\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/users/{id}\",\n      \"methods\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Get a user by ID\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"in\": \"path\",\n              \"description\": \"User ID\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": [\n            {\n              \"code\": \"200\",\n              \"description\": \"User found\",\n              \"content\": \"application/json\"\n            },\n            {\n              \"code\": \"404\",\n              \"description\": \"User not found\",\n              \"content\": \"application/json\"\n            }\n          ]\n        },\n        {\n          \"method\": \"PUT\",\n          \"summary\": \"Update a user\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"in\": \"path\",\n              \"description\": \"User ID\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"requestBody\": {\n            \"description\": \"Updated user object\",\n            \"required\": true,\n            \"content\": \"application/json\"\n          },\n          \"responses\": [\n            {\n              \"code\": \"200\",\n              \"description\": \"User updated successfully\",\n              \"content\": \"application/json\"\n            },\n            {\n              \"code\": \"404\",\n              \"description\": \"User not found\",\n              \"content\": \"application/json\"\n            }\n          ]\n        },\n        {\n          \"method\": \"DELETE\",\n          \"summary\": \"Delete a user\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"in\": \"path\",\n              \"description\": \"User ID\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          ],\n          \"responses\": [\n            {\n              \"code\": \"204\",\n              \"description\": \"User deleted successfully\",\n              \"content\": \"application/json\"\n            },\n            {\n              \"code\": \"404\",\n              \"description\": \"User not found\",\n              \"content\": \"application/json\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"components\": {\n    \"schemas\": [\n      {\n        \"name\": \"User\",\n        \"properties\": [\n          {\n            \"name\": \"id\",\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"Unique identifier for the user\"\n          },\n          {\n            \"name\": \"username\",\n            \"type\": \"string\",\n            \"description\": \"Username for the user\"\n          },\n          {\n            \"name\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"Email address for the user\"\n          },\n          {\n            \"name\": \"created_at\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was created\"\n          }\n        ],\n        \"required\": [\"username\", \"email\"]\n      }\n    ]\n  }\n}"
        }
      ]
    },
    "edit_text": {
      "content": [
        {
          "type": "text",
          "text": "{\n  \"original_length\": 100,\n  \"new_length\": 120,\n  \"result\": \"This is the edited content with some changes applied. The original text has been modified according to the specified operations.\"\n}"
        }
      ]
    }
  }
}
